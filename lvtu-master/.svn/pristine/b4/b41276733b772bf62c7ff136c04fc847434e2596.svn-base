apiready = function() {
	api.parseTapmode();
	//var header = $api.byId('header');
	//$api.fixStatusBar(header);
	//var headerPos = $api.offset(header);
	var uid = api.pageParam.uid;
	$api.setStorage('uid',uid);
	var body_h = $api.offset($api.dom('body')).h;
	init();
};

var g_data = [];
var g_positon = 0;
var startDate = null, endDate = null;

function init(){
    initOKBtn();
    initHelpBtn();
    
    api.addEventListener({
	    name:'exifDone'
    },function(ret){
        if(ret && ret.value ){
            var value = ret.value;
            alert(JSON.stringify(g_data));
    	    g_data[g_positon].lng = value.lng;
    	    g_data[g_positon].lat = value.lat;
    	    ++g_positon;
    	    if(null != g_data[g_positon].path){
    	        getGPSInfo(g_data[g_positon].path);
    	    }
    	    else{
    	    	
				api.openWin({
	                name: 'newnote',
	                url: 'newnote.html',
	                pageParam:{
	                  	param: g_data
	                }
                });
    	    }
    	}
        //api.alert({msg:g_positon});
    });
}

function initOKBtn(){
	var frmwidth = api.frameWidth;
	var starX = (frmwidth-120)/2;
	var button = api.require('UIButton');
	button.open({
	    rect: {
	        x: starX,
	        y: 450,
	        w: 120,
	        h: 46
	    },
	    corner: 5,
	    bg: {
	        normal: 'widget://image/frm_calendar/sure.png',
	        highlight: 'widget://image/frm_calendar/sure.png',
	        active: 'widget://image/frm_calendar/sure.png'
	    },
	    title: {
	        size: 14,
	        highlight: '',
	        active: '',
	        normal: '',
	        highlightColor: '#000000',
	        activeColor: '#000adf',
	        normalColor: '#ff0000',
	        alignment: 'center'
	    },
	    fixedOn: api.frameName,
	    fixed: true,
	    move: true
	}, function(ret, err) {
	    if (ret) {	 
	    	if(ret.eventType=="click")
	    	{
	    		var choosephotos = getPicture();
	    		savephotos(choosephotos);
	    		//showProgress();
	    	}
	    } else {
	        alert(JSON.stringify(err));
	    }
	});
}



function savephotos(choosephotos){

	$api.setStorage('photosnum_innote',0);
	if(choosephotos!=null){
		/*
		 * 导入数据库
		 */
		showProgress();
		var uid = $api.getStorage('uid');
		var newyjUlr = '/user/'+uid+'/yj';
		var bodyParam = {
	        title: '',
	        status:0
	    }
		 ajaxRequest(newyjUlr, 'post', JSON.stringify(bodyParam), function (ret, err) {
	        if (ret) {
	        	var travelid = ret.id;
	        	
	 			for(var id in choosephotos){
					var pictime = choosephotos[id].time;
		            var imgurl = choosephotos[id].path;
		            
		            var lng = choosephotos[id].lng ;
		            var lat = choosephotos[id].lat;
		             
		 			var recpoint ='{"lat":"'+ lat+'","lng":"'+lng+'"}';	
		            
		         	var uploadphtoUlr = '/file';
					var bodyParam = {
				        file:imgurl
				    }
					 ajaxPhotoRequest(uploadphtoUlr, 'post', imgurl, function (ret, err) {	
				        if (ret) {  
				        	var file ={
				        		id:ret.id,
				        		name:ret.name,
				        		url:ret.url
				        	} 
				        		
				        	 var tmpday = new Date(pictime);
						    var tmpMonth =tmpday.getMonth()+1;
						    var newday = tmpday.getFullYear()+'-'+tmpMonth+'-'+tmpday.getDate();
							var getdayviewUrl = '/yj?filter=';
							 
						    var yj_urlParam = {
						    	where:{
						    		id:travelid
						    		},
						    	include: ['dayview'],
						    	includefilter:{
						    		dayview:{
						    			where:{
						    				dayinfo:newday
						    			}
						    		}
						    	}
						    };
						    ajaxRequest(getdayviewUrl + JSON.stringify(yj_urlParam), 'GET', '', function (ret, err) {   
						        alert(JSON.stringify(ret));
						        if (ret && ret[0]!=null && ret[0].dayview!=null && ret[0].dayview[0]!=null) {  
						        	alert(5);	        	
						        	  var dayviewid=ret[0].dayview[0].id;   
						        	 
						        	   setTimeout(function () { 					       
											savetoview(dayviewid,file,recpoint,imgurl,pictime);      
									    }, 500);
						        	  
						        }
						        else{
						        	alert(3);
						        	//新建dayview
						        	 var setdayviewUlr = '/yj/'+travelid+'/dayview';
									var bodyParam = {
								        dayinfo:newday,
								    }		   
									 ajaxRequest(setdayviewUlr, 'post', JSON.stringify(bodyParam),function (ret, err) {
									 	if(ret)
									 	{
									 		var dayviewid = ret.id;
									 		
									 		/*
								        	 * 如果newday是第一天，则创建guideimg
								        	 */
								        	var getyjdaysUrl = '/yj?filter=';			 
										    var yjdays_urlParam = {
										    	where:{
										    		id:travelid
										    		},
										    	include: ['dayview']
										    };
										    ajaxRequest(getyjdaysUrl + JSON.stringify(yjdays_urlParam), 'GET', '', function (ret, err) {  
								        		if(ret && ret[0]!=null && ret[0].dayview[0]!=null && ret[0].dayview[0].id!=null  && ret[0].dayview.length==1)
								        		{
								        				var setguideimgurl=	'/yj/'+ travelid;
								        				var uideimg_Param = {
														       guideimg:file
														    } ;
														ajaxRequest(setguideimgurl, 'put', JSON.stringify(uideimg_Param),function (ret, err) {
												        	if (ret) {  
												        	alert(1); 
												            }
												            else{
												            	alert('设置guidimg'+JSON.stringify(err));													            
												            }
												            api.hideProgress();
												        });
								        		}
								        		else{
									        		alert('查看是否第一张photo'+JSON.stringify(err));
								        		}
								        			        	
												api.hideProgress();
								        	});
								        	
									 		 								        	
				 							savetoview(dayviewid,file,recpoint,imgurl,pictime);    
									 	}	
									 	else{
									 		api.alert({
								                msg: "图片上传失败,请重试一次！"
								            });
									 	}
									 });		        	
				        			api.hideProgress();
						        }		        
				        		api.hideProgress();
					        });
				        	
				        	
				        	
				        }
				        else{
				        	alert('post to file'+JSON.stringify(err));
				        } 
				        			        
						api.hideProgress();
			        }); 
				}
	        	
	        }
	        else{
				alert('post yj'+JSON.stringify(err));
			}				        
			api.hideProgress();
        });
	}else{
		alert("该事件范围内没有照片可以选择");
	}
}


/*
 * 将photo存入数据库
 */
function savetoview(dayviewid,file,recpoint,imgurl,phototime){
    var addphotoUlr ='/dayview/'+dayviewid+'/photo';
	var bodyParam = {
        gpsinfo:recpoint,
        height:'',
        filename:file.name,
        note:'',
        url:file,
        tag:'',
        status:0,
        source:'album',
        phototime:phototime,
    }
	 ajaxRequest(addphotoUlr, 'post', JSON.stringify(bodyParam), function (ret, err) {							
        if (ret) {        	
        	$api.setStorage('photosnum_innote',$api.getStorage('photosnum_innote')*1.0+1);
        }
        else{
        	api.alert({
                msg: "图片上传失败,请重试一次！"
	            });
	        }					        
			api.hideProgress();
        });
}

function initHelpBtn(){
var frmwidth = api.frameWidth;
	var starX = (frmwidth-120)/2+130;
	
	var button = api.require('UIButton');
	button.open({
	    rect: {
	        x: starX,
	        y: 450,
	        w: 32,
	        h: 32
	    },
	    corner: 5,
	    bg: {
	        normal: 'widget://image/frm_calendar/help.png',
	        highlight: 'widget://image/frm_calendar/help.png',
	        active: 'widget://image/frm_calendar/help.png'
	    },
	    title: {
	        size: 14,
	        highlight: '',
	        active: '',
	        normal: '',
	        highlightColor: '#000000',
	        activeColor: '#000adf',
	        normalColor: '#ff0000',
	        alignment: 'center'
	    },
	    fixedOn: api.frameName,
	    fixed: true,
	    move: true
	}, function(ret, err) {
	    if (ret) {	 
	    	if(ret.eventType=="click")
	    	{
	    		var uid = $api.getStorage('uid');
		    	api.openWin({
		            name: 'win_userpage',
		            url: '../html/win_userpage.html',
		            pageParam: {
			            title: '选择照片',
			            url: 'frm_pictureList.html',
			            frameName: 'frm_pictureList',
			            uid:uid
			        },
		            bounces: false,
		            rect: {
		                x: 0,
		                y: 0,
		                w: 'auto',
		                h: 'auto'
		            },           
		            reload: true,
		            showProgress: true
		        });
	            
	    		//api.alert({msg:'On help button down.'});
	    	}
	    } else {
	        alert(JSON.stringify(err));
	    }
	});
}

function getPicture() {
        var scanner = api.require('UIMediaScanner');
        scanner.scan({
	        type: 'picture',
	        count: 100,
	        sort: {
		        key: 'time',
		        order: 'desc'
	        },
	        thumbnail: {
		        w: 150,
		        h: 150
	        }
        },function(ret,err){
        	if(0 < ret.total){
                photoFilter(ret);
                //getGPSInfo(ret.list[0].path);
        	}
        	else{
        	    api.alert({msg:err.msg});
        	}
        });
        return g_data;
}

function photoFilter(picList) {
    if(null == picList){
        api.alert({msg:'Get nothing.'});
        return null;
    }
    //for(var i = 0, total = picList.total; i < 9; ++i){
    
    for(var i = 0, total = picList.total;i<total;++i){
        if(('jpg' == picList.list[i].suffix || 'png' == picList.list[i].suffix) 
        	&& (true == checkDateRange(startDate, endDate, picList.list[i].time)) ){
            var attrJson = {};
            attrJson.time = picList.list[i].time;
            attrJson.path = picList.list[i].path;
            attrJson.lng = 0;
            attrJson.lat = 0;
            g_data.push(attrJson);
        }
        
    }
    
     
}


function checkDateRange(start, end, current){
	var startDate = new Date(start);
	var endDate = new Date(end);
	var currentDate = new Date(current);
	
	if((currentDate>startDate && currentDate<endDate) || currentDate==startDate || currentDate==endDate){
		return true;
	}
	else{
		return false;
	}
}
/*
 * 
 * 重新写一个新的
 */
function checkDateRange2(start, end, current){
    var startArray = start.split('-');
    var endArray = end.split('-');
    var curArray = current.split('-');
	
    if( (curArray[0] === startArray[0] && curArray[0] === endArray[0]) ){
        if( (curArray[1] === startArray[1] && curArray[1] === endArray[1]) &&
            (parseInt(curArray[2]) >= parseInt(startArray[2]) && parseInt(curArray[2]) <= parseInt(endArray[2]))
          ){//In same year and same month, between start day and end day.
            alert("Condition 1: return true.");
            alert(1);
            return true;
        }
        else if( (parseInt(curArray[1]) == parseInt(startArray[1]) && parseInt(curArray[1]) < parseInt(endArray[1]) && parseInt(curArray[2]) > parseInt(startArray[2]) ) ||
                 (parseInt(curArray[1]) > parseInt(startArray[1]) && parseInt(curArray[1]) == parseInt(endArray[1]) && parseInt(curArray[2]) < parseInt(startArray[2]) )
               ){//In same year, different month.
            alert("Condition 2: return true.");
            alert(2);
            return true;
        }
    }/*
    else if((parseInt(curArray[0]) >= parseInt(startArray[0]) && parseInt(curArray[0]) <= parseInt(endArray[0])) &&
       
      ){
        return true;
        alert("return true.");
    }*/
    return false;
}

function getGPSInfo(imgPath) {
    var imageExif = api.require('exifInterface');
	imageExif.getExifInfo({
		picPath: imgPath
	},function(ret, err){
		if(ret.status){
			api.sendEvent({
	            name:'exifDone',
	            //extra:{lat:'ret.latitude', lng:'ret.longitude'}
	            extra:{lat:'1.0', lng:'2.0'}
            });
		} else{
			api.alert({msg:err.msg});
		}
	});
}

function showProgress(){
    //alert("showProgress")
    api.showProgress({
        style: 'default',
        animationType: 'fade',
        title: '努力加载中...',
        text: '先喝杯茶...',
        modal: false
    });        
}

/*Draw Calendar on 'pickdateandtime' page.*/

var $$ = function(id) {
    return "string" == typeof id ? document.getElementById(id) : id;
};

var Class = {
    create : function() {
        return function() {
            this.initialize.apply(this, arguments);
        }
    }
}

Object.extend = function(destination, source) {
    for (var property in source) {
        destination[property] = source[property];
    }
    return destination;
}

var Calendar = Class.create();

Calendar.prototype = {
    initialize : function(container, options) {
        this.Container = $$(container);
        //容器(table结构)
        this.Days = [];
        //日期对象列表
        this.SetOptions(options);
        this.Year = this.options.Year;
        this.Month = this.options.Month;
        this.SelectDay = this.options.SelectDay ? new Date(this.options.SelectDay) : null;
        this.onSelectDay = this.options.onSelectDay;
        this.onToday = this.options.onToday;
        this.onFinish = this.options.onFinish;
        this.Draw();
    },
	//设置默认属性
	SetOptions : function(options) {
		this.options = {//默认值
			Year : new Date().getFullYear(), //显示年
			Month : new Date().getMonth() + 1, //显示月
			SelectDay : null, //选择日期
			onSelectDay : function() {
			}, //在选择日期触发
			onToday : function() {
			}, //在当天日期触发
			onFinish : function() {
			} //日历画完后触发
		};
		Object.extend(this.options, options || {});
	},
	//上一个月
	PreMonth : function() {
		//先取得上一个月的日期对象
		var d = new Date(this.Year, this.Month - 2, 1);
		//再设置属性
		this.Year = d.getFullYear();
		this.Month = d.getMonth() + 1;
		//重新画日历
		this.Draw();
	},
	//下一个月
	NextMonth : function() {
		var d = new Date(this.Year, this.Month, 1);
		this.Year = d.getFullYear();
		this.Month = d.getMonth() + 1;
		this.Draw();
	},
	//画日历
	Draw : function() {
		//用来保存日期列表
		var arr = [];
		//用当月第一天在一周中的日期值作为当月离第一天的天数
		for (var i = 1, firstDay = new Date(this.Year, this.Month - 1, 1).getDay(); i <= firstDay; i++) {
			arr.push("&nbsp;");
		}
		//用当月最后一天在一个月中的日期值作为当月的天数
		for (var i = 1, monthDay = new Date(this.Year, this.Month, 0).getDate(); i <= monthDay; i++) {
			arr.push(i);
		}
		var frag = document.createDocumentFragment();
		this.Days = [];
		while (arr.length > 0) {
			//每个星期插入一个tr
			var row = document.createElement("tr");
			//每个星期有7天
			for (var i = 1; i <= 7; i++) {
				var cell = document.createElement("td");
				cell.innerHTML = "&nbsp;";
				if (arr.length > 0) {
					var d = arr.shift();
					cell.innerHTML = d;
					if (d > 0) {
						this.Days[d] = cell;
						//判断是否今日
						if (this.IsSame(new Date(this.Year, this.Month - 1, d), new Date())) {
							this.onToday(cell);
						}
						//判断是否选择日期
						if (this.SelectDay && this.IsSame(new Date(this.Year, this.Month - 1, d), this.SelectDay)) {
							this.onSelectDay(cell);
						}
					}
				}
				row.appendChild(cell);
			}
			frag.appendChild(row);
		}
		//先清空内容再插入(ie的table不能用innerHTML)
		while (this.Container.hasChildNodes()) {
			this.Container.removeChild(this.Container.firstChild);
		}
		this.Container.appendChild(frag);
		this.onFinish();
	},
	//判断是否同一日
	IsSame : function(d1, d2) {
		return (d1.getFullYear() == d2.getFullYear() && d1.getMonth() == d2.getMonth() && d1.getDate() == d2.getDate());
	},
	getSelectMonth : function() {
	    return this.Month;
	},
	getSelectYear : function() {
	    return this.Year;
	}
};

var cale = new Calendar("idCalendar", {
	SelectDay : new Date().setDate(10), //要选择的日期，可注释
	//			    onSelectDay: function(o){ o.className = "onSelect"; },   //增加 类
	onToday : function(o) {
		o.className = "onToday";
	},
	onFinish : function() {
		$$("idCalendarYear").innerHTML = this.Year;
		$$("idCalendarMonth").innerHTML = this.Month;
		//表头年份
		// 		            var flag = [10,15,20];     //判断选择是不是指定日期
		//			        for(var i = 0, len = flag.length; i < len; i++){
		//			            this.Days[flag[i]].innerHTML = "<a href='javascript:void(0);' onclick=\"alert('日期是:"+this.Year+"/"+this.Month+"/"+flag[i]+"');return false;\">" + flag[i] + "</a>";
		//			        }
	}
});

$$("idCalendarPre").onclick = function() {
	cale.PreMonth();
}

$$("idCalendarNext").onclick = function() {
	cale.NextMonth();
}

var selectDate = "";

//点击表格里面的值
var tb = document.getElementById('idCalendar');
tb.onclick = function(e) {

	//alert(typeof e.target.innerHTML); //看一下输出是什么类型
	if (e.target.innerHTML == "&nbsp;")
		alert('空');
	if (e.target.innerHTML !== "&nbsp;") {
		var num = e.target.innerText;
		//alert(e.target.innerHTML + ":" + e.target.nodeName);//输出鼠标所点击的格子里面的值
		//遍历表格
		var arr = new Array();
		for (var i = 0; i < tb.rows.length; i++) {
			for (var j = 0; j < tb.rows[i].cells.length; j++) {
				if (num == tb.rows[i].cells[j].innerText) {
					//alert(num);
					//selectDate =  e.target.innerHTML;
					selectDate = cale.getSelectYear() + '-' +
					             cale.getSelectMonth() + '-' +
					             num;
				}
			}
		}
		if(null == startDate){
		    startDate = selectDate;
			alert(startDate);
		}
		else{
		    endDate = selectDate;
			alert(endDate);
		}
	}
}
/*
function renderHtml(){
	var calendar = document.getElementById("calendar");
	var titleBox = document.createElement("div");
	var bodyBox = document.createElement("div");
	
	//console.log("log: renderHtml().");
	titleBox.className = 'calendar-title-box';
	titleBox.innerHTML = "<span class='prev-month' id='prevMonth'></span>" +
      "<span class='calendar-title' id='calendarTitle'></span>" +
      "<span id='nextMonth' class='next-month'></span>";
    calendar.appendChild(titleBox);
	//api.toast({
	//	msg: ('call renderHtml()'),
	//	duration:2000,
	//	location: 'top'
	//});
    bodyBox.className = 'calendar-body-box';
    var _headHtml = "<tr>" + 
                    "<th>日</th>" +
                    "<th>一</th>" +
                    "<th>二</th>" +
                    "<th>三</th>" +
                    "<th>四</th>" +
                    "<th>五</th>" +
                    "<th>六</th>" +
                    "</tr>";
    var _bodyHtml = "";
    
    // 6 lines in vertical.
    for(var i = 0; i < 6; ++i){
        _bodyHtml += "<tr>" +
                     "<td></td>" +
                     "<td></td>" +
                     "<td></td>" +
                     "<td></td>" +
                     "<td></td>" +
                     "<td></td>" +
                     "<td></td>" +
                     "</tr>";
    }
    bodyBox.innerHTML = "<table id='calendarTable' class='calendar-table'>" +
                        _headHtml + _bodyHtml +
                        "</table>";
    calendar.appendChild(bodyBox);

}

function showCalendarData() {
    var _year = date.getDate().getFullYear();
    var _month = date.getDate().getMonth() + 1;
    var _dateStr = getDateStr(date.getDate());
    
    var calendarTitle = document.getElementById("calendarTitle");
    var titleStr = _dateStr.substr(0,4) + "年" +
                   _dateStr.substr(4,2) + "月"；
    calendarTitle.innerText = titleStr;
    
    var _table = document.getElementById("calendarTable");
    var tds = _table.getElementByTagName("td");
    var _firstDay = new Date(_year, _month - 1, 1);
    for(var i = 0; i < tds.length; ++i){
        var _theDay = new Date(_year, _month - 1, i + 1 - _firstDay.getDay());
        var _theDayStr = getDateStr(_theDay);
        _tds[i].innerText = _theDay.getDate();
        _tds[i].setAttribute('data', _theDayStr);
        
        if(_theDayStr == getDateStr(new Date())){
            _tds[i].className = 'currentDay';
        }else if(_theDayStr.substr(0,6) == getDateStr(_firstDay).substr(0,6)){
            _tds[i].className = 'currentMonth';
        }else{
            _tds[i].className = 'otherMonth';
        }
    }
}

function bindEvent(){
    var prevMonth = document.getElementById("prevMonth");
    var nextMonth = document.getElementById("nextMonth");
    addEvent(prevMonth, 'click', toPrevMonth);
    addEvent(nextMonth, 'click', toNextMonth);
}

function addEvent(dom, type, func){
    if(dom.addEventListener){
        dom.addEventListener(type, function(e){
            func(e);
        });
    }else if(dom.attachEvent){
        dom.attachEvent('on' + type, function(e){
            func(e);
        });
    }else{
        dom['on' + type] = function(e){
            func(e);
        }
    }
}

function toPrevMonth(){
    var d = date.getDate();
    date.setDate(new Date(d.getFullYear(), d.getMonth() - 1, 1));
    showCalendarData();
}

function toNextMonth() {
	var d = dateObj.getDate();
	dateObj.setDate(new Date(d.getFullYear(), d.getMonth() + 1, 1));
	showCalendarData();
}

function getDateStr(date){
    var _year = date.getFullYear();
    var _month = date.getMonth() + 1;
    var _day = date.getDate();
    
    _month = (_month > 9) ? ("" + _month) : ("0" + _month);
    _day = (_day > 9) ? ("" + _day) : ("0" + _day);
    return _year + _month + _day; 
}
*/
